(defclass refrigerator
  :super cascaded-link)
(defmethod refrigerator
  (:init
   ()
   (let (s1 s2 s3 l1 a1 a2 a3 s4 s5 s6 s7 s8 s9 b1 b2 b3 b4 b5 b6 k1 k2)
     (send-super :init)
     (setq s1 (make-cube 500 500 700))
     (send s1 :locate #f(0 0 350))
     (setq s2 (make-cube 420 800 298))
     (send s2 :locate #f(0 160 180))
     (setq s3 (make-cube 420 800 298))
     (send s3 :locate #f(0 160 520))
     (setq l1 (body- s1 s2 s3))
     (send l1 :set-color :cyan2)
     (setq a1 (make-cube 420 490 296))
     (send a1 :locate #f(0 10 179))
     (setq a2 (make-cube 350 420 270))
     (send a2 :locate #f(0 0 320))
     (setq a3 (make-cube 80 100 20))
     (send a3 :locate #f(0 290 300))
     (setq a1 (body- a1 a2 a3))
     (send a1 :set-color :aquamarine2)
     (setq s4 (make-cylinder 14 330))
     (setq s5 (make-cube 245 30 300))
     (send s5 :locate (send s4 :transform-vector #f(-105 0 160)))
     (send s5 :set-color :SeaGreen2)
     (setq s6 (make-cylinder 14 330))
     (setq s7 (make-cube 245 30 300))
     (send s7 :locate (send s6 :transform-vector #f(105 0 160))) 
     (send s7 :set-color :SeaGreen2)
     (setq s8 (make-cube 496 36 29.7))
     (send s8 :locate #f(0 262 685.1))
     (send s8 :set-color :cyan2)
     (setq s9 (make-cube 496 36 38))
     (send s9 :locate #f(0 262 350))
     (send s9 :set-color :cyan2)
     (setq k1 (make-gdome (make-gdome (make-icosahedron 30.0))))
     (send k1 :locate #f(0 0 400))
     (send k1 :set-color :red)
     (send l1 :assoc s8)
     (send l1 :assoc s9)
     (send s4 :assoc s5)
     (send s6 :assoc s7)
     (setq b1 (instance bodyset-link :init (make-cascoords) :bodies (list l1 s8 s9)))
     (setq b2 (instance bodyset-link :init (make-cascoords) :bodies (list s4 s5)))
     (setq b3 (instance bodyset-link :init (make-cascoords) :bodies (list s6 s7)))
     (setq b4 (instance bodyset-link :init (make-cascoords) :bodies (list a1)))
     (setq b5 (instance bodyset-link :init (make-cascoords) :bodies (list k1)))
     (send b2 :locate #f(230 265 360))
     (send b3 :locate #f(-230 265 360))
     (send b4 :locate #f(0 100 0))
     (send self :assoc b1)
     (send b1 :assoc b2)
     (send b1 :assoc b3)
     (send b1 :assoc b4)
     (send b1 :assoc b5)
     (setq joint-list
	   (list 
	    (instance rotational-joint
		      :init :parent-link b1 :child-link b2
		      :axis :z)
	    (instance rotational-joint
		     :init :parent-link b1 :child-link b3
		     :axis :z)
	    (instance linear-joint
		      :init :parent-link b1 :child-link b4
		      :axis :y)))
     (setq links (list b1 b2 b3 b4 b5))
     (send self :init-ending)
     )))
(setq r (instance refrigerator :init))
(objects (list r))

(setq i 0)
(do-until-key
(send r :angle-vector (float-vector  (+ -45 (* 45 (sin (/ i 100.0)))) (+ 45 (* 45 (sin (/ i 100.0)))) (* 90 (sin (/ i 100.0))) ))
(send *irtviewer* :draw-objects)
(incf i))
